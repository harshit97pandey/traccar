Ext.define('Traccar.Style',{singleton:!0,panelPadding:10,windowWidth:640,windowHeight:480,dateTimeFormat:'Y-m-d H:i:s',timeFormat:'H:i',dateFormat:'Y-m-d',weekStartDay:1,deviceWidth:350,reportHeight:250,reportTime:100,mapDefaultLat:51.507222,mapDefaultLon:-.1275,mapDefaultZoom:6,mapRouteColor:'rgba(21, 127, 204, 1.0)',mapRouteWidth:4,mapArrowStrokeColor:'rgba(50, 50, 50, 1.0)',mapArrowStrokeWidth:1,mapTextColor:'rgba(50, 50, 50, 1.0)',mapTextStrokeColor:'rgba(255, 255, 255, 1.0)',mapTextStrokeWidth:1,
mapTextOffset:10,mapTextFont:'bold 12px sans-serif',mapColorOnline:'rgba(77, 250, 144, 1.0)',mapColorUnknown:'rgba(250, 190, 77, 1.0)',mapColorOffline:'rgba(255, 84, 104, 1.0)',mapColorReport:'rgba(21, 127, 204, 1.0)',mapColorReportSelected:'rgba(194, 221, 242, 1.0)',mapRadiusNormal:7,mapRadiusSelected:14,mapMaxZoom:20,mapDelay:500,coordinatePrecision:6,numberPrecision:2});
Ext.define('Traccar.AttributeFormatter',{singleton:!0,coordinateFormatter:function(value){return value.toFixed(Traccar.Style.coordinatePrecision)},speedFormatter:function(value){return Ext.getStore('SpeedUnits').formatValue(value,Traccar.app.getPreference('speedUnit'))},courseFormatter:function(value){return'N NE E SE S SW W NW'.split(' ')[Math.floor(value/45)]},distanceFormatter:function(value){return Ext.getStore('DistanceUnits').formatValue(value,Traccar.app.getPreference('distanceUnit'))},defaultFormatter:function(value){return'number'===
typeof value?Number(value.toFixed(Traccar.Style.numberPrecision)):'boolean'===typeof value?value?Ext.Msg.buttonText.yes:Ext.Msg.buttonText.no:value instanceof Date?Ext.Date.format(value,Traccar.Style.dateTimeFormat):value},getFormatter:function(key){return'latitude'===key||'longitude'===key?this.coordinateFormatter:'speed'===key?this.speedFormatter:'course'===key?this.courseFormatter:'distance'===key||'odometer'===key?this.distanceFormatter:this.defaultFormatter}});
Ext.define('Traccar.model.Server',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'registration',type:'boolean'},{name:'readonly',type:'boolean'},{name:'map',type:'string'},{name:'bingKey',type:'string'},{name:'mapUrl',type:'string'},{name:'language',type:'string'},{name:'distanceUnit',type:'string'},{name:'speedUnit',type:'string'},{name:'latitude',type:'float'},{name:'longitude',type:'float'},{name:'zoom',type:'int'}],proxy:{type:'ajax',url:'./api/server',actionMethods:{update:'PUT'},
writer:{type:'json',writeAllFields:!0}}});
Ext.define('Traccar.model.User',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'name',type:'string'},{name:'email',type:'string'},{name:'password',type:'string'},{name:'admin',type:'boolean'},{name:'map',type:'string'},{name:'language',type:'string'},{name:'distanceUnit',type:'string'},{name:'speedUnit',type:'string'},{name:'latitude',type:'float'},{name:'longitude',type:'float'},{name:'zoom',type:'int'}],proxy:{type:'rest',url:'./api/users',writer:{type:'json',
writeAllFields:!0}}});Ext.define('Traccar.model.Device',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'name',type:'string'},{name:'uniqueId',type:'string'},{name:'status',type:'string'},{name:'lastUpdate',type:'date',dateWriteFormat:'c'},{name:'phoneNumber',type:'string'}]});
Ext.define('Traccar.model.Position',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'protocol',type:'string'},{name:'deviceId',type:'int'},{name:'serverTime',type:'date'},{name:'deviceTime',type:'date'},{name:'fixTime',type:'date'},{name:'valid',type:'boolean'},{name:'latitude',type:'float'},{name:'longitude',type:'float'},{name:'altitude',type:'float'},{name:'speed',type:'float'},{name:'course',type:'float'},{name:'address',type:'string'},{name:'attributes'}]});
Ext.define('Traccar.model.Attribute',{extend:Ext.data.Model,fields:[{name:'priority',type:'int'},{name:'name',type:'string'},{name:'value',type:'string'}]});Ext.define('Traccar.model.Command',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'deviceId',type:'int'},{name:'type',type:'string'},{name:'attributes'}]});Ext.define('Traccar.model.Polygon',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'type',type:'string'},{name:'name',type:'string'},{name:'coordinates'}]});
Ext.define('Traccar.model.Alert',{extend:Ext.data.Model,identifier:'negative',fields:[{name:'id',type:'int'},{name:'deviceId',type:'int'},{name:'deviceName',type:'string'},{name:'polygonId',type:'int'},{name:'polygonName',type:'string'},{name:'creationDate',type:'date'},{name:'cancelDate',type:'date'}]});Ext.define('Traccar.store.Devices',{extend:Ext.data.Store,model:'Traccar.model.Device',proxy:{type:'rest',url:'./api/devices',writer:{writeAllFields:!0}}});
Ext.define('Traccar.store.AllDevices',{extend:Ext.data.Store,model:'Traccar.model.Device',proxy:{type:'rest',url:'./api/devices',extraParams:{all:!0}}});Ext.define('Traccar.store.Positions',{extend:Ext.data.Store,model:'Traccar.model.Position',proxy:{type:'rest',url:'./api/positions'}});Ext.define('Traccar.store.LatestPositions',{extend:Ext.data.Store,model:'Traccar.model.Position'});
Ext.define('Traccar.store.Users',{extend:Ext.data.Store,model:'Traccar.model.User',proxy:{type:'rest',url:'./api/users',api:{create:'./api/users/add',read:'./api/users',update:'./api/users',destroy:'./api/users'},writer:{writeAllFields:!0}}});Ext.define('Traccar.store.Attributes',{extend:Ext.data.Store,model:'Traccar.model.Attribute',sorters:[{property:'priority'}]});
Ext.define('Traccar.store.MapTypes',{extend:Ext.data.Store,fields:['key','name'],data:[{name:'OpenStreetMaps'},{name:'Bing Road'},{name:'Bing Areal'},{name:'Google Roads'},{name:'Google Satelite'},{name:'Google Hybrid'},{name:'ArcGis Topo'},{name:'ArcGis Imagery'}]});
Ext.define('Traccar.store.DistanceUnits',{extend:Ext.data.Store,fields:['key','name','factor'],data:[{key:'km',name:Strings.sharedKm,factor:.001},{key:'mi',name:Strings.sharedMi,factor:6.21371E-4}],formatValue:function(value,unit){return unit?(unit=this.findRecord('key',unit),(value*unit.get('factor')).toFixed(2)+' '+unit.get('name')):value}});
Ext.define('Traccar.store.SpeedUnits',{extend:Ext.data.Store,fields:['key','name','factor'],data:[{key:'kmh',name:Strings.sharedKmh,factor:1.852},{key:'mph',name:Strings.sharedMph,factor:1.15078}],formatValue:function(value,unit){return unit?(unit=this.findRecord('key',unit),(value*unit.get('factor')).toFixed(1)+' '+unit.get('name')):value}});
Ext.define('Traccar.store.CommandTypes',{extend:Ext.data.Store,fields:['key','name'],data:[{key:'positionPeriodic',name:Strings.commandPositionPeriodic},{key:'positionStop',name:Strings.commandPositionStop},{key:'engineStop',name:Strings.commandEngineStop},{key:'engineResume',name:Strings.commandEngineResume}]});
Ext.define('Traccar.store.TimeUnits',{extend:Ext.data.Store,fields:['name','factor'],data:[{name:Strings.sharedSecond,factor:1},{name:Strings.sharedMinute,factor:60},{name:Strings.sharedHour,factor:3600}]});Ext.define('Traccar.store.Languages',{extend:Ext.data.Store,fields:['code','name'],data:function(){var code,data=[];for(code in Locale.languages)Locale.languages.hasOwnProperty(code)&&data.push({code:code,name:Locale.languages[code].name});return data}()});
Ext.define('Traccar.store.Polygons',{extend:Ext.data.Store,model:'Traccar.model.Polygon',proxy:{type:'ajax',api:{create:'./api/polygon/add',read:'./api/polygon/list',update:'./api/polygon/update',destroy:'./api/polygon/remove'},reader:{type:'json'},writer:{type:'json',writeAllFields:!0}}});Ext.define('Traccar.store.Alerts',{extend:Ext.data.Store,model:'Traccar.model.Alert',proxy:{type:'rest',url:'./api/notifications/list'}});
Ext.define('Traccar.view.BaseDialog',{extend:Ext.window.Window,bodyPadding:Traccar.Style.panelPadding,resizable:!1,modal:!0});
Ext.define('Traccar.view.CommandDialogController',{extend:Ext.app.ViewController,alias:'controller.commandDialog',onSelect:function(selected){this.lookupReference('paramPositionPeriodic').setHidden('positionPeriodic'!==selected.getValue())},onSendClick:function(button){button=button.up('window').down('form');button.updateRecord();var record=button.getRecord();if('positionPeriodic'===record.get('type')){button=this.lookupReference('paramPositionPeriodic');var value=button.down('numberfield[name\x3d"frequency"]').getValue();
value*=button.down('combobox[name\x3d"unit"]').getValue();record.set('attributes',{frequency:value})}Ext.Ajax.request({scope:this,url:'./api/commands',jsonData:record.getData(),callback:this.onSendResult})},onSendResult:function(options,success,response){success?(Ext.toast(Strings.commandSent),this.closeView()):Traccar.app.showError(response)}});
Ext.define('Traccar.view.CommandDialog',{extend:Traccar.view.BaseDialog,controller:'commandDialog',title:Strings.commandTitle,items:{xtype:'form',items:[{xtype:'combobox',name:'type',fieldLabel:Strings.commandType,store:'CommandTypes',displayField:'name',valueField:'key',listeners:{select:'onSelect'}},{xtype:'fieldcontainer',reference:'paramPositionPeriodic',name:'attributes',hidden:!0,items:[{xtype:'numberfield',fieldLabel:Strings.commandFrequency,name:'frequency'},{xtype:'combobox',fieldLabel:Strings.commandUnit,
name:'unit',store:'TimeUnits',displayField:'name',valueField:'factor'}]}]},buttons:[{text:Strings.commandSend,handler:'onSendClick'},{text:Strings.sharedCancel,handler:'closeView'}]});Ext.define('Traccar.view.BaseEditDialog',{extend:Traccar.view.BaseDialog,buttons:[{text:Strings.sharedSave,handler:'onSaveClick'},{text:Strings.sharedCancel,handler:'closeView'}]});
Ext.define('Traccar.view.BaseEditDialogController',{extend:Ext.app.ViewController,alias:'controller.baseEditDialog',onSaveClick:function(button){var store;var dialog=button.up('window').down('form');dialog.updateRecord();dialog=dialog.getRecord();(store=dialog.store)?(dialog.phantom&&store.add(dialog),store.sync({failure:function(batch){store.rejectChanges();Traccar.app.showError(batch.exceptions[0].getError().response)}})):dialog.save();button.up('window').close()}});
Ext.define('Traccar.view.DeviceDialog',{extend:Traccar.view.BaseEditDialog,controller:'baseEditDialog',title:Strings.deviceDialog,items:{xtype:'form',items:[{xtype:'textfield',name:'name',fieldLabel:Strings.deviceName,allowBlank:!1},{xtype:'textfield',name:'uniqueId',fieldLabel:Strings.deviceIdentifier,allowBlank:!1},{xtype:'textfield',name:'phoneNumber',fieldLabel:'Phone number',allowBlank:!0}]}});
Ext.define('Traccar.view.DevicesController',{extend:Ext.app.ViewController,alias:'controller.devices',config:{listen:{controller:{'*':{selectDevice:'selectDevice',selectReport:'selectReport'}}}},init:function(){var readonly=Traccar.app.getServer().get('readonly')&&!Traccar.app.getUser().get('admin');this.lookupReference('toolbarAddButton').setVisible(!readonly);this.lookupReference('toolbarEditButton').setVisible(!readonly);this.lookupReference('toolbarRemoveButton').setVisible(!readonly);Traccar.app.getUser().get('admin')&&
this.lookupReference('settingsUsersButton').setHidden(!1)},onAccoountClick:function(){var dialog=Ext.create('Traccar.view.UserDialog');dialog.down('form').loadRecord(Traccar.app.getUser());dialog.show()},onUsersClick:function(){Ext.create('Traccar.view.BaseWindow',{title:Strings.settingsUsers,modal:!1,items:{xtype:'usersView'}}).show()},onLogoutClick:function(){Ext.create('Traccar.view.LoginController').logout()},onAddClick:function(){var device=Ext.create('Traccar.model.Device');device.store=this.getView().getStore();
var dialog=Ext.create('Traccar.view.DeviceDialog');dialog.down('form').loadRecord(device);dialog.show()},onEditClick:function(){var device=this.getView().getSelectionModel().getSelection()[0];var dialog=Ext.create('Traccar.view.DeviceDialog');dialog.down('form').loadRecord(device);dialog.show()},onRemoveClick:function(){var device=this.getView().getSelectionModel().getSelection()[0];Ext.Msg.show({title:Strings.deviceDialog,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,
no:Strings.sharedCancel},fn:function(btn){'yes'===btn&&(btn=Ext.getStore('Devices'),btn.remove(device),btn.sync())}})},onCommandClick:function(){var device=this.getView().getSelectionModel().getSelection()[0];var command=Ext.create('Traccar.model.Command');command.set('deviceId',device.get('id'));device=Ext.create('Traccar.view.CommandDialog');device.down('form').loadRecord(command);device.show()},onSelectionChange:function(selected){var empty=0===selected.getCount();this.lookupReference('toolbarEditButton').setDisabled(empty);
this.lookupReference('toolbarRemoveButton').setDisabled(empty);this.lookupReference('deviceCommandButton').setDisabled(empty);empty||this.fireEvent('selectDevice',selected.getLastSelected(),!0)},selectDevice:function(device,center){this.getView().getSelectionModel().select([device],!1,!0)},selectReport:function(position){void 0!==position&&this.getView().getSelectionModel().deselectAll()}});
Ext.define('Traccar.view.EditToolbar',{extend:Ext.toolbar.Toolbar,xtype:'editToolbar',initComponent:function(){this.callParent(arguments);this.add(0,[{xtype:'button',handler:'onAddClick',reference:'toolbarAddButton',glyph:'xf067@FontAwesome',tooltip:Strings.sharedAdd,tooltipType:'title'},{xtype:'button',disabled:!0,handler:'onEditClick',reference:'toolbarEditButton',glyph:'xf040@FontAwesome',tooltip:Strings.sharedEdit,tooltipType:'title'},{xtype:'button',disabled:!0,handler:'onRemoveClick',reference:'toolbarRemoveButton',
glyph:'xf00d@FontAwesome',tooltip:Strings.sharedRemove,tooltipType:'title'}])}});
Ext.define('Traccar.view.RegisterController',{extend:Ext.app.ViewController,alias:'controller.register',init:function(){this.lookupReference('languageField').setValue(Locale.language)},onCreateClick:function(){var form=this.lookupReference('form'),data=form.getValues();data.personal=!!data.personal&&'on'==data.personal;data.admin=!0;form.isValid()&&Ext.Ajax.request({scope:this,method:'POST',url:'./api/users/register',jsonData:data,callback:this.onCreateReturn})},onCreateReturn:function(options,success,
response){success?(this.closeView(),Ext.toast(Strings.loginCreated)):showError(response)},onPersonalClick:function(box,value){box=this.lookupReference('company');box.setDisabled(!1);box.focus()},onSelectLanguage:function(selected){selected=selected.getValue();var url=window.location.href;if(0<=url.indexOf('locale\x3d')){var prefix=url.substring(0,url.indexOf('locale'));url=url.substring(url.indexOf('locale'));url=url.substring(url.indexOf('\x3d')+1);url=0<=url.indexOf('\x26')?url.substring(url.indexOf('\x26')):
'';url=prefix+'locale\x3d'+selected+url}else url=0>url.indexOf('?')?url+('?locale\x3d'+selected):url+('\x26locale\x3d'+selected);window.location.href=url},showError:function(response){Ext.isString(response)?Ext.Msg.alert(Strings.errorTitle,response):response.responseText?(response=Ext.decode(response.responseText),response.details?Ext.Msg.alert(Strings.errorTitle,response.details):Ext.Msg.alert(Strings.errorTitle,response.message)):response.statusText?Ext.Msg.alert(Strings.errorTitle,response.statusText):
Ext.Msg.alert(Strings.errorTitle,Strings.errorConnection)}});
Ext.define('Traccar.view.Register',{extend:Traccar.view.BaseDialog,controller:'register',title:Strings.loginRegister,items:{xtype:'form',reference:'form',jsonSubmit:!0,items:[{xtype:'combobox',name:'language',fieldLabel:Strings.loginLanguage,store:'Languages',displayField:'name',valueField:'code',reference:'languageField'},{xtype:'textfield',name:'name',fieldLabel:Strings.userName,allowBlank:!1},{xtype:'textfield',name:'email',fieldLabel:Strings.userEmail,vtype:'email',allowBlank:!1},{xtype:'textfield',
name:'password',fieldLabel:Strings.userPassword,inputType:'password',allowBlank:!1},{xtype:'checkbox',fieldLabel:'Personal',name:'personal',checked:!0,handler:'onPersonalClick'},{xtype:'textfield',fieldLabel:'Company name',name:'company',reference:'company',disabled:!0}]},buttons:[{text:Strings.sharedSave,handler:'onCreateClick'},{text:Strings.sharedCancel,handler:'closeView'}]});
Ext.define('Traccar.view.LoginController',{extend:Ext.app.ViewController,alias:'controller.login',init:function(){Ext.util.Cookies.get('locale');this.lookupReference('languageField').setValue(Locale.language)},login:function(){var form=this.lookupReference('form');form.isValid()&&(Ext.getBody().mask(Strings.sharedLoading),Ext.Ajax.request({scope:this,method:'POST',url:'./api/session',params:form.getValues(),callback:function(options,success,response){Ext.getBody().unmask();success?((data=JSON.parse(response.responseText))&&
data.language&&Ext.util.Cookies.set('locale',data.language),this.fireViewEvent('login')):Ext.Msg.alert(Strings.errorTitle,Strings.loginFailed)}}))},logout:function(){Ext.Ajax.request({scope:this,method:'DELETE',url:'./api/session',callback:function(){window.location.href='./login.html'}})},onSelectLanguage:function(selected){selected=selected.getValue();Ext.util.Cookies.set('locale',selected);var url=window.location.href;if(0<=url.indexOf('locale\x3d')){var prefix=url.substring(0,url.indexOf('locale'));
url=url.substring(url.indexOf('locale'));url=url.substring(url.indexOf('\x3d')+1);url=0<=url.indexOf('\x26')?url.substring(url.indexOf('\x26')):'';url=prefix+'locale\x3d'+selected+url}else url=0>url.indexOf('?')?url+('?locale\x3d'+selected):url+('\x26locale\x3d'+selected);window.location.href=url},onAfterRender:function(field){field.focus()},onSpecialKey:function(field,e){e.getKey()===e.ENTER&&this.login()},onLoginClick:function(){Ext.getElementById('submitButton').click();this.login()},onRegisterClick:function(){Ext.create('Traccar.view.Register').show()}});
Ext.define('Traccar.view.UserDialogController',{extend:Ext.app.ViewController,alias:'controller.userDialog',init:function(){Traccar.app.getUser().get('admin')&&this.lookupReference('adminField').setDisabled(!1)},onSaveClick:function(button){var dialog=button.up('window').down('form');dialog.updateRecord();dialog=dialog.getRecord();if(dialog===Traccar.app.getUser())dialog.save();else{var store=Ext.getStore('Users');dialog.phantom&&store.add(dialog);store.sync({failure:function(batch){store.rejectChanges();
Traccar.app.showError(batch.exceptions[0].getError().response)}})}button.up('window').close()}});
Ext.define('Traccar.view.UserDialog',{extend:Traccar.view.BaseEditDialog,controller:'userDialog',title:Strings.settingsUser,items:{xtype:'form',items:[{xtype:'textfield',name:'name',fieldLabel:Strings.userName},{xtype:'textfield',name:'email',fieldLabel:Strings.userEmail,allowBlank:!1},{xtype:'textfield',name:'password',fieldLabel:Strings.userPassword,inputType:'password',allowBlank:!1},{xtype:'checkboxfield',name:'admin',fieldLabel:Strings.userAdmin,allowBlank:!1,disabled:!0,reference:'adminField'},
{xtype:'combobox',name:'language',fieldLabel:Strings.loginLanguage,store:'Languages',displayField:'name',valueField:'code',submitValue:!1,reference:'languageField'},{xtype:'combobox',name:'map',fieldLabel:Strings.mapLayer,store:'MapTypes',displayField:'name',valueField:'name'},{xtype:'combobox',name:'distanceUnit',fieldLabel:Strings.settingsDistanceUnit,store:'DistanceUnits',displayField:'name',valueField:'key'},{xtype:'combobox',name:'speedUnit',fieldLabel:Strings.settingsSpeedUnit,store:'SpeedUnits',
displayField:'name',valueField:'key'},{xtype:'numberfield',name:'latitude',fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:'numberfield',name:'longitude',fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:'numberfield',name:'zoom',fieldLabel:Strings.serverZoom}]}});
Ext.define('Traccar.view.ServerDialog',{extend:Traccar.view.BaseEditDialog,controller:'baseEditDialog',title:Strings.serverTitle,items:{xtype:'form',items:[{xtype:'checkboxfield',name:'registration',fieldLabel:Strings.serverRegistration,allowBlank:!1},{xtype:'checkboxfield',name:'readonly',fieldLabel:Strings.serverReadonly,allowBlank:!1},{xtype:'combobox',name:'map',fieldLabel:Strings.mapLayer,store:'MapTypes',displayField:'name',valueField:'name'},{xtype:'combobox',name:'distanceUnit',fieldLabel:Strings.settingsDistanceUnit,
store:'DistanceUnits',displayField:'name',valueField:'key'},{xtype:'combobox',name:'speedUnit',fieldLabel:Strings.settingsSpeedUnit,store:'SpeedUnits',displayField:'name',valueField:'key'},{xtype:'numberfield',name:'latitude',fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:'numberfield',name:'longitude',fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:'numberfield',name:'zoom',fieldLabel:Strings.serverZoom}]}});
Ext.define('Traccar.view.UserDevicesController',{extend:Ext.app.ViewController,alias:'controller.userDevices',init:function(){this.userId=this.getView().user.getData().id;this.getView().getStore().load({scope:this,callback:function(records,operation$jscomp$0,success$jscomp$0){Ext.create('Traccar.store.Devices').load({params:{userId:this.userId},scope:this,callback:function(records,operation,success){if(success)for(operation=0;operation<records.length;operation++)success=this.getView().getStore().find('id',
records[operation].getData().id),this.getView().getSelectionModel().select(success,!0,!0)}})}})},onBeforeSelect:function(object,record,index){Ext.Ajax.request({scope:this,url:'./api/permissions',jsonData:{userId:this.userId,deviceId:record.getData().id},callback:function(options,success,response){success||Traccar.app.showError(response)}})},onBeforeDeselect:function(object,record,index){Ext.Ajax.request({scope:this,method:'DELETE',url:'./api/permissions',jsonData:{userId:this.userId,deviceId:record.getData().id},
callback:function(options,success,response){success||Traccar.app.showError(response)}})}});Ext.define('Traccar.view.UserDevices',{extend:Ext.grid.Panel,xtype:'userDevicesView',controller:'userDevices',store:'AllDevices',selModel:{selType:'checkboxmodel',checkOnly:!0,showHeaderCheckbox:!1},listeners:{beforedeselect:'onBeforeDeselect',beforeselect:'onBeforeSelect'},columns:[{text:Strings.deviceName,dataIndex:'name',flex:1},{text:Strings.deviceIdentifier,dataIndex:'uniqueId',flex:1}]});
Ext.define('Traccar.view.BaseWindow',{extend:Ext.window.Window,width:Traccar.Style.windowWidth,height:Traccar.Style.windowHeight,layout:'fit',modal:!0});
Ext.define('Traccar.view.UsersController',{extend:Ext.app.ViewController,alias:'controller.users',init:function(){Ext.getStore('Users').load()},onAddClick:function(){var user=Ext.create('Traccar.model.User');var dialog=Ext.create('Traccar.view.UserDialog');dialog.down('form').loadRecord(user);dialog.show()},onEditClick:function(){var user=this.getView().getSelectionModel().getSelection()[0];var dialog=Ext.create('Traccar.view.UserDialog');dialog.down('form').loadRecord(user);dialog.show()},onRemoveClick:function(){var user=
this.getView().getSelectionModel().getSelection()[0];Ext.Msg.show({title:Strings.settingsUser,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,no:Strings.sharedCancel},fn:function(btn){var store=Ext.getStore('Users');'yes'===btn&&(store.remove(user),store.sync())}})},onDevicesClick:function(){var user=this.getView().getSelectionModel().getSelection()[0];Ext.create('Traccar.view.BaseWindow',{title:Strings.deviceTitle,items:{xtype:'userDevicesView',user:user}}).show()},
onSelectionChange:function(selected){selected=0<selected.length;this.lookupReference('toolbarEditButton').setDisabled(selected);this.lookupReference('toolbarRemoveButton').setDisabled(selected);this.lookupReference('userDevicesButton').setDisabled(selected)}});
Ext.define('Traccar.view.Users',{extend:Ext.grid.Panel,xtype:'usersView',controller:'users',store:'Users',selType:'rowmodel',tbar:{xtype:'editToolbar',items:[{text:Strings.deviceTitle,disabled:!0,handler:'onDevicesClick',reference:'userDevicesButton'}]},listeners:{selectionchange:'onSelectionChange'},columns:[{text:Strings.userName,dataIndex:'name',flex:1},{text:Strings.userEmail,dataIndex:'email',flex:1},{text:Strings.userAdmin,dataIndex:'admin',flex:1}]});
Ext.define('Traccar.view.SettingsMenuController',{extend:Ext.app.ViewController,alias:'controller.settings',init:function(){Traccar.app.getUser().get('admin')&&this.lookupReference('settingsUsersButton').setHidden(!1)},onUserClick:function(){var dialog=Ext.create('Traccar.view.UserDialog');dialog.down('form').loadRecord(Traccar.app.getUser());dialog.show()},onServerClick:function(){var dialog=Ext.create('Traccar.view.ServerDialog');dialog.down('form').loadRecord(Traccar.app.getServer());dialog.show()},
onUsersClick:function(){Ext.create('Traccar.view.BaseWindow',{title:Strings.settingsUsers,modal:!1,items:{xtype:'usersView'}}).show()},onLogoutClick:function(){Ext.create('Traccar.view.LoginController').logout()}});
Ext.define('Traccar.view.SettingsMenu',{extend:Ext.button.Button,xtype:'settingsMenu',glyph:'xf013@FontAwesome',text:Strings.settingsTitle,menu:{controller:'settings',items:[{text:Strings.settingsUser,handler:'onUserClick'},{text:Strings.settingsUsers,hidden:!0,handler:'onUsersClick',reference:'settingsUsersButton'},{text:Strings.loginLogout,handler:'onLogoutClick'}]}});
Ext.define('Traccar.view.Devices',{extend:Ext.grid.Panel,xtype:'devicesView',controller:'devices',store:'Devices',title:Strings.deviceTitle,selType:'rowmodel',tbar:{xtype:'editToolbar',items:[{disabled:!0,handler:'onCommandClick',reference:'deviceCommandButton',glyph:'xf093@FontAwesome',tooltip:Strings.deviceCommand,tooltipType:'title'},{id:'deviceFollowButton',glyph:'xf05b@FontAwesome',tooltip:Strings.deviceFollow,tooltipType:'title',enableToggle:!0},{xtype:'tbfill'},{glyph:'xf0c0@FontAwesome',tooltip:'Users',
tooltipType:'title',handler:'onUsersClick',reference:'settingsUsersButton'},{glyph:'xf013@FontAwesome',tooltip:'Account',tooltipType:'title',handler:'onAccoountClick'},{glyph:'xf08b@FontAwesome',tooltip:'Sign out',tooltipType:'title',handler:'onLogoutClick'}]},listeners:{selectionchange:'onSelectionChange'},columns:[{text:Strings.deviceName,dataIndex:'name',flex:1},{text:Strings.deviceLastUpdate,dataIndex:'lastUpdate',flex:1,renderer:function(value,metaData,record){switch(record.get('status')){case 'online':metaData.tdCls=
'status-color-online';break;case 'offline':metaData.tdCls='status-color-offline';break;default:metaData.tdCls='status-color-unknown'}return Ext.Date.format(value,Traccar.Style.dateTimeFormat)}}]});
Ext.define('Traccar.view.PolygonsController',{extend:Ext.app.ViewController,alias:'controller.polygons',init:function(){Traccar.app.getUser().get('admin')&&this.lookupReference('settingsUsersButton').setHidden(!1)},onAccoountClick:function(){var dialog=Ext.create('Traccar.view.UserDialog');dialog.down('form').loadRecord(Traccar.app.getUser());dialog.show()},onUsersClick:function(){Ext.create('Traccar.view.BaseWindow',{title:Strings.settingsUsers,modal:!1,items:{xtype:'usersView'}}).show()},onLogoutClick:function(){Ext.create('Traccar.view.LoginController').logout()},
onSelectionChange:function(selected){var empty=0===selected.getCount();this.lookupReference('toolbarEditButton').setDisabled(empty);this.lookupReference('toolbarRemoveButton').setDisabled(empty);this.lookupReference('toolbarLinkButton').setDisabled(empty);this.lookupReference('toolbarUnlinkButton').setDisabled(empty);empty||this.fireEvent('showArea',selected.getLastSelected().data)},onAddPolygonClick:function(){this.fireEvent('drawArea','Polygon')},onAddCircleClick:function(){this.fireEvent('drawArea',
'Circle')},onAddLineClick:function(){this.fireEvent('drawArea','LineString')},onAddSquareClick:function(){this.fireEvent('drawArea','Square')},onRemoveClick:function(){var polygon=this.getView().getSelectionModel().getSelection()[0];store=Ext.getStore('Polygons');store.remove(polygon);store.sync()},onLinkClick:function(){var polygon=this.getView().getSelectionModel().getSelection()[0],devices=Ext.getStore('Devices');Ext.Ajax.request({scope:this,url:'./api/polygon/link',method:'POST',params:{polygonId:polygon.id,
deviceId:devices.getAt(0).getData().id},callback:function(){Ext.toast('Link applied')}})},onUnlinkClick:function(){var polygon=this.getView().getSelectionModel().getSelection()[0],devices=Ext.getStore('Devices');Ext.Ajax.request({scope:this,url:'./api/polygon/unlink',method:'POST',params:{polygonId:polygon.id,deviceId:devices.getAt(0).getData().id},callback:function(){Ext.toast('Link applied')}})}});
Ext.define('Traccar.view.Polygons',{extend:Ext.grid.Panel,xtype:'polygonsView',controller:'polygons',store:'Polygons',title:'Polygons',layout:'fit',tbar:{items:[{xtype:'button',reference:'toolbarAddButton',glyph:'xf067@FontAwesome',tooltip:Strings.sharedAdd,tooltipType:'title',menu:[{text:'Polygon',handler:'onAddPolygonClick'},{text:'Line',handler:'onAddLineClick'},{text:'Circle',handler:'onAddCircleClick'},{text:'Square',handler:'onAddSquareClick'}]},{xtype:'button',disabled:!0,handler:'onEditClick',
reference:'toolbarEditButton',glyph:'xf040@FontAwesome',tooltip:Strings.sharedEdit,tooltipType:'title'},{xtype:'button',disabled:!0,handler:'onRemoveClick',reference:'toolbarRemoveButton',glyph:'xf00d@FontAwesome',tooltip:Strings.sharedRemove,tooltipType:'title'},{xtype:'button',disabled:!0,glyph:'xf0c1@FontAwesome',reference:'toolbarLinkButton',handler:'onLinkClick',tooltip:'Link',tooltipType:'title'},{xtype:'button',disabled:!0,reference:'toolbarUnlinkButton',glyph:'xf127@FontAwesome',handler:'onUnlinkClick',
tooltip:'Unlink',tooltipType:'title'},{xtype:'tbfill'},{glyph:'xf0c0@FontAwesome',tooltip:'Users',tooltipType:'title',handler:'onUsersClick',reference:'settingsUsersButton'},{glyph:'xf013@FontAwesome',tooltip:'Account',tooltipType:'title',handler:'onAccoountClick'},{glyph:'xf08b@FontAwesome',tooltip:'Sign out',tooltipType:'title',handler:'onLogoutClick'}]},listeners:{selectionchange:'onSelectionChange'},columns:[{text:Strings.deviceName,dataIndex:'name',flex:1},{text:Strings.deviceName,dataIndex:'type',
flex:1}]});
Ext.define('Traccar.view.StateController',{extend:Ext.app.ViewController,alias:'controller.state',config:{listen:{controller:{'*':{selectDevice:'selectDevice',selectReport:'selectReport'}},store:{'#LatestPositions':{add:'updateLatest',update:'updateLatest'},'#Positions':{clear:'clearReport'}}}},keys:function(){var i;var result={};var list='fixTime latitude longitude valid altitude speed course address protocol'.split(' ');for(i=0;i<list.length;i++)result[list[i]]={priority:i,name:Strings['position'+list[i].replace(/^\w/g,
function(s){return s.toUpperCase()})]};return result}(),updateLatest:function(store,data){Ext.isArray(data)||(data=[data]);for(store=0;store<data.length;store++)this.deviceId===data[store].get('deviceId')&&this.updatePosition(data[store])},formatValue:function(value){return'number'===typeof id?Number(value.toFixed(2)):value},updatePosition:function(position){var key;var store=Ext.getStore('Attributes');store.removeAll();for(key in position.data)position.data.hasOwnProperty(key)&&void 0!==this.keys[key]&&
store.add(Ext.create('Traccar.model.Attribute',{priority:this.keys[key].priority,name:this.keys[key].name,value:Traccar.AttributeFormatter.getFormatter(key)(position.get(key))}));position=position.get('attributes');if(position instanceof Object)for(key in position)position.hasOwnProperty(key)&&store.add(Ext.create('Traccar.model.Attribute',{priority:1024,name:key.replace(/^./,function(match){return match.toUpperCase()}),value:Traccar.AttributeFormatter.getFormatter(key)(position[key])}))},selectDevice:function(device){this.deviceId=
device.get('id');(device=Ext.getStore('LatestPositions').findRecord('deviceId',this.deviceId,0,!1,!1,!0))?this.updatePosition(device):Ext.getStore('Attributes').removeAll()},selectReport:function(position){this.deviceId=null;this.updatePosition(position)},clearReport:function(store){Ext.getStore('Attributes').removeAll()}});
Ext.define('Traccar.view.State',{extend:Ext.grid.Panel,xtype:'stateView',controller:'state',store:'Attributes',title:Strings.stateTitle,columns:[{text:Strings.stateName,dataIndex:'name',flex:1},{text:Strings.stateValue,dataIndex:'value',flex:1}]});
Ext.define('Traccar.view.ReportController',{extend:Ext.app.ViewController,alias:'controller.report',config:{listen:{controller:{'*':{selectDevice:'selectDevice',selectReport:'selectReport'}}}},onShowClick:function(){var serialize=function(obj){var str=[],p;for(p in obj)obj.hasOwnProperty(p)&&str.push(encodeURIComponent(p)+'\x3d'+encodeURIComponent(obj[p]));return str.join('\x26')};exportButton=this.lookupReference('exportButton');exportButton.setDisabled(!0);if(this.lookupReference('deviceField').isValid()){var deviceId=
this.lookupReference('deviceField').getValue();var fromDate=this.lookupReference('fromDateField').getValue();var fromTime=this.lookupReference('fromTimeField').getValue();fromDate=new Date(fromDate.getFullYear(),fromDate.getMonth(),fromDate.getDate(),fromTime.getHours(),fromTime.getMinutes(),fromTime.getSeconds(),fromTime.getMilliseconds());fromTime=this.lookupReference('toDateField').getValue();var toTime=this.lookupReference('toTimeField').getValue();fromTime=new Date(fromTime.getFullYear(),fromTime.getMonth(),
fromTime.getDate(),toTime.getHours(),toTime.getMinutes(),toTime.getSeconds(),toTime.getMilliseconds());var params={deviceId:deviceId,from:fromDate.toISOString(),to:fromTime.toISOString()};Ext.getStore('Positions').load({params:params,callback:function(records,operation,success){success&&0<records.length&&(exportButton.setHref('./api/report/csv?'+serialize(params)),exportButton.setDisabled(!1))}})}else Ext.toast('Fill required fields')},onClearClick:function(){Ext.getStore('Positions').removeAll()},
onSelectionChange:function(selected){0<selected.getCount()&&this.fireEvent('selectReport',selected.getLastSelected(),!0)},selectDevice:function(device){device&&this.getView().getSelectionModel().deselectAll()},selectReport:function(position,center){this.getView().getSelectionModel().select([position],!1,!0)}});
Ext.define('Traccar.view.Report',{extend:Ext.grid.Panel,xtype:'reportView',controller:'report',store:'Positions',title:Strings.reportTitle,tbar:[{xtype:'tbtext',html:Strings.reportDevice},{xtype:'combobox',reference:'deviceField',store:'Devices',valueField:'id',displayField:'name',typeAhead:!0,queryMode:'local',allowBlank:!1},'-',{xtype:'tbtext',html:Strings.reportFrom},{xtype:'datefield',reference:'fromDateField',startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-
18E5)},{xtype:'timefield',reference:'fromTimeField',maxWidth:Traccar.Style.reportTime,format:Traccar.Style.timeFormat,value:new Date((new Date).getTime()-18E5)},'-',{xtype:'tbtext',html:Strings.reportTo},{xtype:'datefield',reference:'toDateField',startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date},{xtype:'timefield',reference:'toTimeField',maxWidth:Traccar.Style.reportTime,format:Traccar.Style.timeFormat,value:new Date},'-',{text:Strings.reportShow,handler:'onShowClick'},
{href:'#',text:'Export',hrefTarget:'_blank',reference:'exportButton',disabled:!0},{text:Strings.reportClear,handler:'onClearClick'}],listeners:{selectionchange:'onSelectionChange'},columns:[{text:Strings.positionValid,dataIndex:'valid',flex:1,renderer:Traccar.AttributeFormatter.getFormatter('valid')},{text:Strings.positionFixTime,dataIndex:'fixTime',flex:1.5,xtype:'datecolumn',align:'right',renderer:Traccar.AttributeFormatter.getFormatter('fixTime')},{text:Strings.positionLatitude,dataIndex:'latitude',
flex:1,align:'right',renderer:Traccar.AttributeFormatter.getFormatter('latitude')},{text:Strings.positionLongitude,dataIndex:'longitude',flex:1,align:'right',renderer:Traccar.AttributeFormatter.getFormatter('latitude')},{text:Strings.positionAltitude,dataIndex:'altitude',flex:1,align:'right',renderer:Traccar.AttributeFormatter.getFormatter('altitude')},{text:Strings.positionSpeed,dataIndex:'speed',flex:1,align:'right',renderer:Traccar.AttributeFormatter.getFormatter('speed')},{text:Strings.positionDistance,
dataIndex:'summaryDistance',flex:1,align:'right',renderer:Traccar.AttributeFormatter.getFormatter('distance')},{text:Strings.positionAddress,dataIndex:'address',flex:3,renderer:Traccar.AttributeFormatter.getFormatter('address')}]});
Ext.define('Traccar.view.AlertController',{extend:Ext.app.ViewController,alias:'controller.alert',onSeenClick:function(){var selected=this.getView().getSelectionModel();0<selected.getCount()&&(selected=selected.getSelection()[0].getData().id,Ext.Ajax.request({scope:this,url:'./api/notifications/seen',params:{notificationId:selected},method:'POST',callback:function(){var seenChecked=this.lookupReference('seenCheck').getValue();console.log(seenChecked);Ext.getStore('Alerts').load({params:{all:seenChecked}});
Ext.toast('Alert marked as seen')}}))},onAllChange:function(checkbox,checked){Ext.getStore('Alerts').load({params:{all:checked}})},onSelectionChange:function(selected){0<selected.getCount()&&(seen=selected.getLastSelected().getData().seen,this.lookupReference('seenButton').setDisabled(seen))}});
Ext.define('Traccar.view.Alert',{extend:Ext.grid.Panel,xtype:'alertView',controller:'alert',store:'Alerts',title:'Alerts',tbar:[{text:'Mark as read',handler:'onSeenClick',disabled:!0,reference:'seenButton'},{xtype:'checkbox',handler:'onAllChange',reference:'seenCheck'}],listeners:{selectionchange:'onSelectionChange'},columns:[{text:'seen',dataIndex:'seen',flex:1,renderer:Traccar.AttributeFormatter.getFormatter('seen')},{text:'polygonName',dataIndex:'polygonName',flex:1,renderer:Traccar.AttributeFormatter.getFormatter('polygonName')},
{text:'deviceName',dataIndex:'deviceName',flex:1,renderer:Traccar.AttributeFormatter.getFormatter('deviceName')},{text:Strings.positionFixTime,dataIndex:'creationDate',flex:1.5,xtype:'datecolumn',align:'right',renderer:Traccar.AttributeFormatter.getFormatter('creationDate')},{text:Strings.positionFixTime,dataIndex:'cancelDate',flex:1.5,xtype:'datecolumn',align:'right',renderer:Traccar.AttributeFormatter.getFormatter('cancelDate')}]});
Ext.define('Traccar.view.MapController',{extend:Ext.app.ViewController,alias:'controller.map',config:{listen:{controller:{'*':{selectDevice:'selectDevice',selectReport:'selectReport',drawArea:'drawArea',showArea:'showArea'}},store:{'#Devices':{add:'updateDevice',update:'updateDevice'},'#LatestPositions':{add:'updateLatest',update:'updateLatest'},'#Positions':{load:'loadReport',clear:'clearReport'}},component:{'#':{selectFeature:'selectFeature'}}}},init:function(){this.latestMarkers={};this.reportMarkers=
{}},getDeviceColor:function(device){switch(device.get('status')){case 'online':return Traccar.Style.mapColorOnline;case 'offline':return Traccar.Style.mapColorOffline;default:return Traccar.Style.mapColorUnknown}},changeMarkerColor:function(style,color){return new ol.style.Style({image:new ol.style.Arrow({radius:style.getImage().getRadius(),fill:new ol.style.Fill({color:color}),stroke:style.getImage().getStroke(),rotation:style.getImage().getRotation()}),text:style.getText()})},updateDevice:function(store,
data){Ext.isArray(data)||(data=[data]);for(store=0;store<data.length;store++){var device=data[store];var deviceId=device.get('id');deviceId in this.latestMarkers&&(deviceId=this.latestMarkers[deviceId],deviceId.setStyle(this.changeMarkerColor(deviceId.getStyle(),this.getDeviceColor(device))))}},followSelected:function(){return Ext.getCmp('deviceFollowButton')&&Ext.getCmp('deviceFollowButton').pressed},updateLatest:function(store,data){Ext.isArray(data)||(data=[data]);for(store=0;store<data.length;store++){var position=
data[store];var deviceId=position.get('deviceId');var device=Ext.getStore('Devices').findRecord('id',deviceId,0,!1,!1,!0);var geometry=new ol.geom.Point(ol.proj.fromLonLat([position.get('longitude'),position.get('latitude')]));if(deviceId in this.latestMarkers){var marker=this.latestMarkers[deviceId];marker.setGeometry(geometry)}else marker=new ol.Feature(geometry),marker.set('record',device),this.latestMarkers[deviceId]=marker,this.getView().getLatestSource().addFeature(marker),geometry=this.getLatestMarker(this.getDeviceColor(device)),
geometry.getText().setText(device.get('name')),marker.setStyle(geometry);marker.getStyle().getImage().setRotation(position.get('course')*Math.PI/180);marker===this.selectedMarker&&this.followSelected()&&this.getView().getMapView().setCenter(marker.getGeometry().getCoordinates())}},loadReport:function(store,data){this.clearReport(store);this.reportRoute=new ol.Feature({geometry:new ol.geom.LineString([])});this.reportRoute.setStyle(this.getRouteStyle());this.getView().getRouteSource().addFeature(this.reportRoute);
for(store=0;store<data.length;store++){var position=data[store];var point=ol.proj.fromLonLat([position.get('longitude'),position.get('latitude')]);var geometry=new ol.geom.Point(point);geometry=new ol.Feature(geometry);geometry.set('record',position);this.reportMarkers[position.get('id')]=geometry;this.getView().getReportSource().addFeature(geometry);var style=this.getReportMarker();style.getImage().setRotation(position.get('course')*Math.PI/180);geometry.setStyle(style);this.reportRoute.getGeometry().appendCoordinate(point)}},
clearReport:function(store){var key;this.reportRoute&&(this.getView().getRouteSource().removeFeature(this.reportRoute),this.reportRoute=null);if(this.reportMarkers){for(key in this.reportMarkers)this.reportMarkers.hasOwnProperty(key)&&this.getView().getReportSource().removeFeature(this.reportMarkers[key]);this.reportMarkers={}}},getRouteStyle:function(){return new ol.style.Style({stroke:new ol.style.Stroke({color:Traccar.Style.mapRouteColor,width:Traccar.Style.mapRouteWidth})})},getMarkerStyle:function(radius,
color){return new ol.style.Style({image:new ol.style.Arrow({radius:radius,fill:new ol.style.Fill({color:color}),stroke:new ol.style.Stroke({color:Traccar.Style.mapArrowStrokeColor,width:Traccar.Style.mapArrowStrokeWidth})}),text:new ol.style.Text({textBaseline:'bottom',fill:new ol.style.Fill({color:Traccar.Style.mapTextColor}),stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),offsetY:-radius/2-Traccar.Style.mapTextOffset,font:Traccar.Style.mapTextFont})})},
getLatestMarker:function(color){return this.getMarkerStyle(Traccar.Style.mapRadiusNormal,color)},getReportMarker:function(){return this.getMarkerStyle(Traccar.Style.mapRadiusNormal,Traccar.Style.mapColorReport)},getReportSelected:function(){return this.getMarkerStyle(Traccar.Style.mapRadiusSelected,Traccar.Style.mapColorReportSelected)},resizeMarker:function(style,radius){return new ol.style.Style({image:new ol.style.Arrow({radius:radius,fill:style.getImage().getFill(),stroke:style.getImage().getStroke(),
rotation:style.getImage().getRotation()}),text:style.getText()})},resizeColorMarker:function(style,radius,color){return new ol.style.Style({image:new ol.style.Arrow({radius:radius,fill:new ol.style.Fill({color:color}),stroke:style.getImage().getStroke(),rotation:style.getImage().getRotation()}),text:style.getText()})},selectMarker:function(marker,center,report){this.selectedMarker&&this.selectedStyle&&this.selectedMarker.setStyle(this.selectedStyle);marker&&(this.selectedStyle=marker.getStyle(),report?
marker.setStyle(this.resizeColorMarker(marker.getStyle(),Traccar.Style.mapRadiusSelected,Traccar.Style.mapColorReportSelected)):marker.setStyle(this.resizeMarker(marker.getStyle(),Traccar.Style.mapRadiusSelected)),center&&this.getView().getMapView().setCenter(marker.getGeometry().getCoordinates()));this.selectedMarker=marker},selectDevice:function(device,center){this.selectMarker(this.latestMarkers[device.get('id')],center)},selectReport:function(position,center){this.selectMarker(this.reportMarkers[position.get('id')],
center,!0)},selectFeature:function(feature){(feature=feature.get('record'))&&(feature instanceof Traccar.model.Device?this.fireEvent('selectDevice',feature,!1):this.fireEvent('selectReport',feature,!1))},showArea:function(polygon){for(var source=this.getView().getVectorSource(),ring=[],i=0;i<polygon.coordinates.length;i++){var coords=polygon.coordinates[i];ring.push(ol.proj.fromLonLat([coords.longitude,coords.latitude]))}polygon=new ol.geom.Polygon([ring]);polygon=new ol.Feature(polygon);source.clear();
source.addFeature(polygon)},drawArea:function(value){var source=this.getView().getVectorSource();source.clear();var map=this.getView().getMap();if('None'!==value){if('Circle'===value)var geometryFunction=ol.interaction.Draw.createRegularPolygon(32);else'Square'===value&&(value='Circle',geometryFunction=ol.interaction.Draw.createRegularPolygon(4));var draw=new ol.interaction.Draw({source:source,type:value,geometryFunction:geometryFunction,maxPoints:void 0});map.addInteraction(draw);draw.on('drawend',
function(event){event=event.feature.getGeometry().getCoordinates()[0];for(var result=[],i=0;i<event.length;i++){var coords=event[i],coords=ol.proj.toLonLat([coords[0],coords[1]]);result.push({longitude:coords[0],latitude:coords[1]})}Ext.Msg.prompt('Name','Area name:',function(btn,text){'ok'==btn&&text&&(btn={type:value,name:text,coordinates:result},store=Ext.getStore('Polygons'),store.add(btn),Ext.toast('Polygon saved'),store.sync());map.removeInteraction(draw)})})}}});
Ext.define('Traccar.view.Map',{extend:Ext.form.Panel,xtype:'mapView',header:!1,controller:'map',title:Strings.mapTitle,layout:'fit',getMap:function(){return this.map},getMapView:function(){return this.mapView},getLatestSource:function(){return this.latestSource},getRouteSource:function(){return this.routeSource},getReportSource:function(){return this.reportSource},getVectorSource:function(){return this.vectorSource},listeners:{afterrender:function(){var routeLayer=function(url,projection){return new ol.layer.Tile({source:new ol.source.XYZ({url:url,
attributions:[new ol.Attribution({html:''})]}),projection:projection,visible:!1})};var reportLayer=function(imagerySet){return new ol.layer.Tile({source:new ol.source.BingMaps({key:'Atabw4WpqrmFXz8yRA9yxMzk2u--7Znu5POGdRsivAkyFw-6QAeOtwgMU8Upcb-W',imagerySet:imagerySet}),visible:!1})};var OSMLayer=new ol.layer.Tile({source:new ol.source.OSM({}),visible:!1});var latestLayer=reportLayer('Road');reportLayer=reportLayer('Aerial');var googleHybridLayer=routeLayer('http://mt0.google.com/vt/lyrs\x3dy\x26hl\x3den\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}\x26s\x3dGa'),
googleSateliteLayer=routeLayer('http://mt0.google.com/vt/lyrs\x3ds\x26hl\x3den\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}\x26s\x3dGa');var lat=routeLayer('http://mt0.google.com/vt/lyrs\x3dm\x26hl\x3den\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}\x26s\x3dGa');var lon=routeLayer('http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}.png');routeLayer=routeLayer('http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png');var layersData=
[{name:'OpenStreetMaps',layer:OSMLayer},{name:'Bing Road',layer:latestLayer},{name:'Bing Areal',layer:reportLayer},{name:'Google Roads',layer:lat},{name:'Google Satelite',layer:googleSateliteLayer},{name:'Google Hybrid',layer:googleHybridLayer},{name:'ArcGis Topo',layer:lon},{name:'ArcGis Imagery',layer:routeLayer}],OSMLayer=function(map){var save=document.createElement('button');save.className='ol-save-button fa-floppy-o';save.title='Save location';save.addEventListener('click',function(e){for(e=
0;e<layersData.length;++e)if(layersData[e].layer.getVisible())var currentLayer=layersData[e].name;Ext.Ajax.request({scope:this,url:'./api/users/location/update',method:'POST',params:{map:currentLayer,zoom:map.getView().getZoom(),longitude:ol.proj.toLonLat(map.getView().getCenter())[0],latitude:ol.proj.toLonLat(map.getView().getCenter())[1]},callback:function(){Ext.toast('Location saved')}})},!1);var element=document.createElement('div');element.className='ol-unselectable ol-control ol-save-div';element.appendChild(save);
ol.control.Control.call(this,{element:element})};ol.inherits(OSMLayer,ol.control.Control);googleHybridLayer=function(map){var select=document.createElement('select');select.className='ol-layers-select';for(var i=map=0;i<layersData.length;++i){var option=document.createElement('option');option.text=layersData[i].name;option.value=layersData[i].name;layersData[i].name==type&&(map=i,layersData[i].layer.setVisible(!0));select.add(option)}select.selectedIndex=map;select.addEventListener('change',function(e){for(e=
0;e<layersData.length;++e)layersData[e].layer.setVisible(select.value===layersData[e].name)},!1);map=document.createElement('div');map.className='ol-unselectable ol-control ol-layers-div';map.appendChild(select);ol.control.Control.call(this,{element:map})};ol.inherits(googleHybridLayer,ol.control.Control);var user=Traccar.app.getUser();var server=Traccar.app.getServer();var type=user.get('map')||server.get('map');this.latestSource=new ol.source.Vector({});latestLayer=new ol.layer.Vector({source:this.latestSource});
this.routeSource=new ol.source.Vector({});routeLayer=new ol.layer.Vector({source:this.routeSource});this.reportSource=new ol.source.Vector({});reportLayer=new ol.layer.Vector({source:this.reportSource});this.vectorSource=new ol.source.Vector({wrapX:!1});googleSateliteLayer=new ol.layer.Vector({source:this.vectorSource,style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 255, 255, 0.2)'}),stroke:new ol.style.Stroke({color:'#ffcc33',width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:'#ffcc33'})})})});
lat=user.get('latitude')||server.get('latitude')||Traccar.Style.mapDefaultLat;lon=user.get('longitude')||server.get('longitude')||Traccar.Style.mapDefaultLon;user=user.get('zoom')||server.get('zoom')||Traccar.Style.mapDefaultZoom;this.mapView=new ol.View({center:ol.proj.fromLonLat([lon,lat]),zoom:user,maxZoom:Traccar.Style.mapMaxZoom});lat=[];for(lon=0;lon<layersData.length;++lon)lat.push(layersData[lon].layer);lat.push(routeLayer);lat.push(reportLayer);lat.push(latestLayer);lat.push(googleSateliteLayer);
this.map=new ol.Map({target:this.body.dom.id,layers:lat,view:this.mapView,interactions:ol.interaction.defaults().extend([new ol.interaction.DragRotateAndZoom])});googleHybridLayer=new googleHybridLayer(this.map);this.map.addControl(googleHybridLayer);latestLayer=new ol.control.ScaleLine;this.map.addControl(latestLayer);latestLayer=new ol.control.ZoomSlider;this.map.addControl(latestLayer);latestLayer=new ol.control.MousePosition({projection:ol.proj.get('EPSG:4326'),coordinateFormat:function(coords){return coords[0].toFixed(6)+
' '+coords[1].toFixed(6)}});this.map.addControl(latestLayer);latestLayer=new ol.control.FullScreen;this.map.addControl(latestLayer);OSMLayer=new OSMLayer(this.map);this.map.addControl(OSMLayer);var target=this.map.getTarget();'string'===typeof target&&(target=Ext.get(target).dom);this.map.on('pointermove',function(e){this.forEachFeatureAtPixel(e.pixel,function(feature,layer){return!0})?target.style.cursor='pointer':target.style.cursor=''});this.map.on('click',function(e){this.map.forEachFeatureAtPixel(e.pixel,
function(feature,layer){this.fireEvent('selectFeature',feature)},this)},this)},resize:function(){this.map.updateSize()}}});
Ext.define('Traccar.view.Main',{extend:Ext.container.Viewport,alias:'widget.main',layout:'border',defaults:{collapsible:!0,split:!0},items:[{region:'west',layout:'border',width:Traccar.Style.deviceWidth,title:'Devices \x26 rules',collapsed:!0,titleCollapse:!1,floatable:!1,titleAlign:'right',tabBarHeaderPosition:0,xtype:'tabpanel',items:[{layout:'border',title:'Devices',defaults:{split:!0,flex:1,header:!1},items:[{region:'center',xtype:'devicesView',flex:1},{region:'south',xtype:'stateView',flex:1,
collapsible:!0}]},{title:'Rules',defaults:{split:!0,flex:1,header:!1},items:[{xtype:'polygonsView',flex:1}]}]},{xtype:'tabpanel',region:'south',titleAlign:'right',height:Traccar.Style.reportHeight,collapsed:!0,tabBarHeaderPosition:0,titleCollapse:!1,floatable:!1,title:'Alerts \x26 Reports',items:[{xtype:'alertView'},{xtype:'reportView'}]},{region:'center',xtype:'mapView',header:!1,collapsible:!1}]});
Ext.define('Traccar.view.MainMobile',{extend:Ext.container.Viewport,alias:'widget.mainMobile',layout:'border',defaults:{header:!1,collapsible:!0,split:!0},items:[{region:'east',xtype:'stateView',flex:4,collapsed:!0,titleCollapse:!0,floatable:!1},{region:'center',xtype:'mapView',collapsible:!1,flex:2},{region:'south',xtype:'devicesView',flex:1}]});
Ext.define('Traccar.controller.Root',{extend:Ext.app.Controller,init:function(){var indicator=document.createElement('div');indicator.className='state-indicator';document.body.appendChild(indicator);this.isPhone=0!==parseInt(window.getComputedStyle(indicator).getPropertyValue('z-index'),10)},onLaunch:function(){Ext.get('spinner').remove();Ext.Ajax.request({scope:this,url:'./api/session',callback:this.onSessionReturn})},onSessionReturn:function(options,success,response){success?(options=Ext.decode(response.responseText),
options.valid?(Traccar.app.setServer(options.server),Traccar.app.setUser(options.user),this.loadApp()):location.href='login.html'):Traccar.app.showError(response)},loadApp:function(){Ext.getStore('Devices').load();Ext.getStore('Alerts').load();Ext.getStore('Polygons').load();this.isPhone?Ext.create('widget.mainMobile'):Ext.create('widget.main');this.startWebSocket()},startWebSocket:function(){var wsUri='https:'===location.protocol?'wss:':'ws:';wsUri+='//'+location.host;wsUri+=location.pathname.replace('/debug.html',
'/')+'ws/positions';websocket=new WebSocket(wsUri);websocket.onopen=function(evt){Ext.toast('Connection to server established')};websocket.onclose=function(evt){Ext.toast('Connection to server closed')};websocket.onmessage=function(evt){var device;message=Ext.decode(evt.data);evt=message.body;if('position'==message.type){var devices=evt.devices;var positions=evt.positions;var deviceStore=Ext.getStore('Devices');var positionStore=Ext.getStore('LatestPositions');for(evt=0;evt<devices.length;evt++)(device=
deviceStore.findRecord('id',devices[evt].id,0,!1,!1,!0))&&device.set({status:devices[evt].status,lastUpdate:devices[evt].lastUpdate},{dirty:!1});for(evt=0;evt<positions.length;evt++)(devices=positionStore.findRecord('deviceId',positions[evt].deviceId,0,!1,!1,!0))?devices.set(positions[evt]):positionStore.add(Ext.create('Traccar.model.Position',positions[evt]))}else'alert'==message.type&&(alertsStore=Ext.getStore('Alerts'),alertsStore.add(Ext.create('Traccar.model.Alert',evt.message)))};websocket.onerror=
function(evt){Ext.toast('Server connection error: '+evt.data)}}});
Ext.define('Traccar.Application',{extend:Ext.app.Application,name:'Traccar',models:'Server User Device Position Attribute Command Polygon Alert'.split(' '),stores:'Devices AllDevices Positions LatestPositions Users Attributes MapTypes DistanceUnits SpeedUnits CommandTypes TimeUnits Languages Polygons Alerts'.split(' '),controllers:['Root'],setUser:function(data){this.user=Ext.create('Ext.data.reader.Json',{model:'Traccar.model.User'}).readRecords(data).getRecords()[0]},getUser:function(){return this.user},
setServer:function(data){this.server=Ext.create('Ext.data.reader.Json',{model:'Traccar.model.Server'}).readRecords(data).getRecords()[0]},getServer:function(){return this.server},getPreference:function(key,defaultValue){return this.getUser().get(key)||this.getServer().get(key)||defaultValue},showError:function(response){Ext.isString(response)?Ext.Msg.alert(Strings.errorTitle,response):response.responseText?(response=Ext.decode(response.responseText),response.details?Ext.Msg.alert(Strings.errorTitle,
response.details):Ext.Msg.alert(Strings.errorTitle,response.message)):response.statusText?Ext.Msg.alert(Strings.errorTitle,response.statusText):Ext.Msg.alert(Strings.errorTitle,Strings.errorConnection)}});Ext.application({name:'Traccar',extend:Traccar.Application});